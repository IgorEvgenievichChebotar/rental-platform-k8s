{{- if .Values.kafka.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: {{ .Values.global.namespace }}
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: apache/kafka:latest
        ports:
        - containerPort: 19092
        - containerPort: 9092
        env:
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka:19092"
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "1@kafka:29093"
        - name: KAFKA_LISTENERS
          value: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: CLUSTER_ID
          value: "4L6g3nShT-eMCtK--X86sw"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: "/tmp/kraft-combined-logs"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        {{- if .Values.kafka.persistence.enabled }}
        volumeMounts:
        - name: kafka-storage
          mountPath: /tmp/kraft-combined-logs
        {{- end }}
  {{- if .Values.kafka.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.kafka.persistence.size }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: kafka
  ports:
  - name: plaintext
    port: 19092
    targetPort: 19092
  - name: plaintext-host
    port: 9092
    targetPort: 9092
{{- end }}
